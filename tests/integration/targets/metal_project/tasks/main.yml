- name: metal_project
  module_defaults:
    equinix.cloud.metal_project:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_device:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_project_list:
      metal_api_token: '{{ metal_api_token }}'
  block:
    - set_fact:
        test_resource_name_prefix: 'ansible-integration-test-project'
    - set_fact:
        unique_id: "{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=8') }}"
    - set_fact:
        test_prefix: "{{ test_resource_name_prefix }}-{{ unique_id }}"

    - name: create first project for test
      equinix.cloud.metal_project:
        name: "{{ test_prefix }}-project1"
        backend_transfer_enabled: true
      register: first_project

    - name: create first project for test again, to check idempotence
      equinix.cloud.metal_project:
        name: "{{ test_prefix }}-project1"
        backend_transfer_enabled: true
      register: first_project_2

    - assert:
        that:
        - first_project.name == '{{ test_prefix }}-project1'
        - first_project.backend_transfer_enabled == true
        - first_project_2.changed == false

    - name: update project name
      equinix.cloud.metal_project:
        id: "{{ first_project.id }}"
        name: "{{ test_prefix }}-project1_renamed"
        backend_transfer_enabled: false

    - name: fetch updated project
      equinix.cloud.metal_project:
        id: "{{ first_project.id }}"
      register: first_project_updated

    - assert:
        that:
        - first_project_updated.name == '{{ test_prefix }}-project1_renamed'
        - first_project_updated.backend_transfer_enabled == false

    - name: create second project for test
      equinix.cloud.metal_project:
        name: "{{ test_prefix }}-project2"
      register: second_project

    - name: list second project
      equinix.cloud.metal_project_list:
        name: "{{ test_prefix }}-project2"
      register: second_project_listed

    - assert:
        that:
        - "second_project_listed.resources | length == 1"  

    - name: list both projects
      equinix.cloud.metal_project_list:
        name: "{{ test_prefix }}"
      register: both_projects_listed
        
    - assert:
        that:
        - "both_projects_listed.resources | length == 2"

    - name: delete second project
      equinix.cloud.metal_project:
        id: "{{ second_project.id }}"
        state: absent

    - name: check that deleting nonexistent resource doesn't err
      equinix.cloud.metal_project:
        id: "{{ second_project.id }}"
        state: absent
       
  always:
    - name: Announce teardown start
      debug:
        msg: "***** TESTING COMPLETE. COMMENCE TEARDOWN *****"

    - name: list test projects
      equinix.cloud.metal_project_list:
        name: "{{ test_prefix }}"
      register: test_projects_listed

    - name: delete test projects
      equinix.cloud.metal_project:
        id: "{{ item.id }}"
        state: absent
      loop: "{{ test_projects_listed.resources }}"
      ignore_errors: yes

