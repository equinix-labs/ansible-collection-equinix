- name: metal_project
  module_defaults:
    equinix.cloud.metal_project:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_device:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_project_list:
      metal_api_token: '{{ metal_api_token }}'
    equinix.cloud.metal_device_list:
      metal_api_token: '{{ metal_api_token }}'
  block:
    - set_fact:
        test_resource_name_prefix: 'ansible-integration-test-device'
    - set_fact:
        unique_id: "{{ lookup('password', '/dev/null chars=ascii_lowercase,digits length=8') }}"
    - set_fact:
        test_prefix: "{{ test_resource_name_prefix }}-{{ unique_id }}"
    - set_fact:
        test_os: ubuntu_22_04
    - set_fact:
        test_plan: c3.small.x86
    - set_fact:
        test_metro: da
    - set_fact:
        wait_seconds: 1200

    - name: create project for test
      equinix.cloud.metal_project:
        name: "{{ test_prefix }}"
      register: test_project

    - name: start first test device
      equinix.cloud.metal_device:
        project_id: "{{ test_project.id }}"
        hostname: "{{ test_prefix }}-dev1"
        operating_system: "{{ test_os }}"
        plan: "{{ test_plan }}"
        metro: "{{ test_metro }}"
        state: present
        provisioning_wait_seconds: "{{ wait_seconds }}"
      register: test_device_1

    - name: start first test device again (idempotence test)
      equinix.cloud.metal_device:
        project_id: "{{ test_project.id }}"
        hostname: "{{ test_prefix }}-dev1"
      register: test_device_1_2

    - name: assert device started
      assert:
        that:
          - "test_device_1.metal_state == 'active'"
          - "test_device_1_2.changed == false"

    - name: start second test device
      equinix.cloud.metal_device:
        project_id: "{{ test_project.id }}"
        hostname: "{{ test_prefix }}-dev2"
        operating_system: "{{ test_os }}"
        plan: "{{ test_plan }}"
        metro: "{{ test_metro }}"
        state: present
        provisioning_wait_seconds: "{{ wait_seconds }}"
      register: test_device_2
    
    - name: list both devices
      equinix.cloud.metal_device_list:
        project_id: "{{ test_project.id }}"
      register: both_devices

    - name: assert both devices selected
      assert:
        that:
        - "both_devices.resources|length == 2"

    - name: list second device
      equinix.cloud.metal_device_list:
        project_id: "{{ test_project.id }}"
        hostname: dev2
      register: second_device

    - name: assert only 2nd device selected
      assert:
        that:
        - "second_device.resources|length == 1"

    - name: delete first device
      equinix.cloud.metal_device:
        id: "{{ test_device_1.id }}"
        state: absent

    - name: delete first device again (idempotence check)
      equinix.cloud.metal_device:
        id: "{{ test_device_1.id }}"
        state: absent

  always:
    - name: Announce teardown start
      debug:
        msg: "***** TESTING COMPLETE. COMMENCE TEARDOWN *****"

    - name: list test projects
      equinix.cloud.metal_project_list:
        name: "{{ test_prefix }}"
      register: test_projects
    
    - name: list devices in test projects
      equinix.cloud.metal_device_list:
        project_id: "{{ item.id }}"
      register: "test_devices"
      loop: "{{ test_projects.resources }}"

    - name: delete test devices
      equinix.cloud.metal_device:
        id: "{{ item.id }}"
        state: absent
      ignore_errors: yes
      loop: "{{ test_devices.results | map(attribute='resources') | flatten }}"

    - name: delete test projects
      equinix.cloud.metal_project:
        id: "{{ item.id }}"
        state: absent
      ignore_errors: yes
      loop: "{{ test_projects.resources }}"
